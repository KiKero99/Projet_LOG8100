name: CI Pipeline / Trivy Vulnerability Scan

on:
  push:
    branches: [ "main" ]

jobs:
  trivy_scan:
    name: Scan Docker Image with Trivy
    runs-on: ubuntu-22.04  
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Trivy
      uses: aquasecurity/setup-trivy@v0.2.1

    - name: Pull Docker Image from Docker Hub
      run: |
        docker pull enriquitotupapi/webgoat:main

    - name: Run Trivy Scan
      if: always()  # Ensures the step runs regardless of previous steps' status
      run: |
        trivy image --format json --output trivy-report.json enriquitotupapi/webgoat:main

    - name: Upload Trivy Report
      uses: actions/upload-artifact@v3
      with:
        name: trivy-report
        path: trivy-report.json

  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: javascript-typescript
          build-mode: none
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'zulu'  # Use the Zulu distribution for JDK 21

      - name: Run Maven clean install
        run: |
          cd ./WebGoat-main  # Navigate to the directory containing the pom.xml
          mvn clean install  # Execute the Maven build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: enriquitotupapi
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: enriquitotupapi/webgoat

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v4
        with:
          context: ./WebGoat-main
          file: ./WebGoat-main/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            version=1.0
            description="WebGoat application Docker image"
            maintainer="enriquitotupapi"
            build_date=${{ steps.meta.outputs.timestamp }}
            commit_sha=${{ github.sha }}

